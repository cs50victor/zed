name: CI Extreme

on:
  push:
    branches:
      - vic/extreme
  pull_request:
    branches:
      - "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.ref_name == 'main' && github.sha || 'anysha' }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

jobs:
  check-compile-macos:
    name: Check macOS compilation
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88
          components: rustfmt, clippy
          targets: aarch64-apple-darwin,x86_64-apple-darwin

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: ./script/clippy

      - name: Check compilation
        run: cargo check --workspace --all-features

      - name: Build (debug mode for speed)
        run: cargo build --package zed

  check-compile-linux:
    name: Check Linux compilation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88
          components: rustfmt, clippy
          targets: x86_64-unknown-linux-gnu

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2-dev \
            libfontconfig-dev \
            libfontconfig1 \
            libssl-dev \
            libvulkan1 \
            libxcb-xkb1 \
            libxkbcommon-dev \
            libxkbcommon-x11-dev \
            libzstd-dev \
            vulkan-validationlayers-dev

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: ./script/clippy

      - name: Check compilation
        run: cargo check --workspace --all-features

      - name: Build (debug mode for speed)
        run: cargo build --package zed

  check-compile-windows:
    name: Check Windows compilation
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.88
          components: rustfmt, clippy
          targets: x86_64-pc-windows-msvc

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy (Windows)
        shell: pwsh
        run: ./script/clippy.ps1

      - name: Check compilation
        run: cargo check --workspace --all-features

      - name: Build (debug mode for speed)
        run: cargo build --package zed

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [check-compile-macos, check-compile-linux, check-compile-windows]
    if: always()
    steps:
      - name: Check results
        run: |
          if [ "${{ needs.check-compile-macos.result }}" != "success" ] || \
             [ "${{ needs.check-compile-linux.result }}" != "success" ] || \
             [ "${{ needs.check-compile-windows.result }}" != "success" ]; then
            echo "One or more platforms failed compilation checks"
            exit 1
          else
            echo "All platforms compiled successfully"
          fi